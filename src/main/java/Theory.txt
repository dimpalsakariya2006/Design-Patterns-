Design Pattern : Design patterns represent the best practices used by experienced object-oriented software developers. 
                 Design patterns are solutions to general problems that software developers faced during software development.
                 These solutions were obtained by trial and error by numerous software developers over quite a substantial period of time.
                 
Types of Design Pattern :

-mainly three types of design pattern
1. Creational Design Pattern
2. Structural Design Pattern
3. Behavioural Design Pattern

Sub types of all design pattern::

1.Creational Design Pattern

- Factory Method Pattern
- Abstract Factory Pattern
- Singleton Pattern
- Builder Pattern
- Object-pool Pattern
- Prototype Pattern

2. Structural Design Pattern

- Adapter Pattern
- Bridge Pattern
- Composite Pattern
- Decorator Pattern
- Facade Pattern
- Flyweight Pattern
- Proxy Pattern

3. Behavioural Design Pattern

- Chain Of Responsibility Pattern
- Command Pattern
- Interpreter Pattern
- Iterator Pattern
- Mediator Pattern
- Memento Pattern
- Observer Pattern
- State Pattern
- Strategy Pattern
- Template Pattern
- Visitor Pattern

**Facrory Pattern**

A Factory Pattern or Factory Method Pattern says that just define an interface or abstract class for 
creating an object but let the subclasses decide which class to instantiate. In other words, subclasses
are responsible to create the instance of the class.

**Abstract Factory Method**

Abstract Factory Pattern says that just define an interface or abstract class for creating families 
of related (or dependent) objects but without specifying their concrete sub-classes.That means Abstract 
Factory lets a class returns a factory of classes. So, this is the reason that Abstract Factory Pattern
 is one level higher than the Factory Pattern.



